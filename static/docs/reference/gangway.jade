include ../.layout.jade

doctype html
html(lang=gw.language)
	- var path = [{label:'Pillars.js Reference',url:'/pillars/docs/reference/'},{label:'Objeto gangway',url:'/pillars/docs/reference/gangway.jade'}];
	+reference-layout("Pillars.js Reference - Objeto gangway - 'make it easy!'",path)

		#title
			h1 Objeto gangway
				em  Pillars.js Reference
			a.source(href="https://github.com/bifuer/pillars/blob/master/lib/gangway.js") Source

		//- Summary
		section.summary
			h2#summary Sumario
			:markdown
				Se genera un objeto gangway por cada solicitud al servidor. El objeto gangway contiene todos los datos de la solicitud del cliente.
				Está disponible en el controlador de un objeto route, ya que el **controller** del objeto route lo recibe como parámetro.  


		
		//- Syntax
		section.syntax
			h2#syntax Sintaxis
			:highlight(lang='javascript')
				var home = new Route(function(gw){
					var id = gw.id; 					// id del objeto gangway para la petición.
					var ip = gw.ip;						// ip del cliente
					var browserLang = gw.language;		// Primer idioma del navegador del cliente 
					var cors = gw.cors; 						// gestion de orígenes cruzados. 
					var method = gw.method;
					var auth = gw.auth; está en el getting started. método autenticate. Esetará el usuario y el password del usuario. Cunado se hace lo del htaccess.
					var encoding = gw.encoding; 					// encoding que se utiliza para el envío al cliente.


					gw.send("<pre>"+util.inspect(gw)+"</pre>");
				});

				

		//- Description
		section.description
			h2#description Descripción
			:markdown
				Lorem Ipsum

			:highlight(lang='javascript')
				Lorem ipsum					

		//- Properties
		section.properties
			h2#properties Propiedades

			//- Property
			section.property
				h3#property-timer: code
					small gangway
					| .timer

				//- Property description
				section.description
					:markdown
						**TimeStamp** de cuando se creó el gangway.

			//- Property
			section.property
				h3#property-id: code
					small gangway
					| .id

				//- Property description
				section.description
					:markdown
						Id del objeto gangway, se genera automáticamente.

			//- Property
			section.property
				h3#property-closed: code
					small gangway
					| .closed

				//- Property description
				section.description
					:markdown
						**Boolean**, indica si el objeto gangway está en proceso de cerrarse o cerrado.


			//- Property
			section.property
				h3#property-req: code
					small gangway
					| .req

				//- Property description
				section.description
					:markdown
						Alias del [objeto request original de Node](http://nodejs.org/api/http.html#http_http_incomingmessage).

			//- Property
			section.property
				h3#property-res: code
					small gangway
					| .res

				//- Property description
				section.description
					:markdown
						Alias del [objeto response original de Node](#)

			//- Property
			section.property
				h3#property-socket: code
					small gangway
					| .socket

				//- Property description
				section.description
					:markdown
						Es el socket de la solicitud. Es un alias de [request.socket de Node](http://nodejs.org/api/http.html#http_message_socket).

			//- Property
			section.property
				h3#property-statusCode: code
					small gangway
					| .statusCode

				//- Property description
				section.description
					:markdown
						Código de estado de la solicitud. Alias de [statusCode original de Node.](http://nodejs.org/api/http.html#http_response_statuscode)

			//- Property
			section.property
				h3#property-headersSent: code
					small gangway
					| .headersSent

				//- Property description
				section.description
					:markdown
						Informa si se han enviado las cabeceras de la respuesta o no. Alias de [headersSent original de Node.](http://nodejs.org/api/http.html#http_response_headerssent)

			//- Property
			section.property
				h3#property-accepts: code
					small gangway
					| .accepts

				//- Property description
				section.description
					:markdown
						Encabezados accepts de la solicitud HTTP. `.accepts` devuelve un objeto con: 
						+ gw.accepts.types: **Array** que contiene los Content-types que espera como respuesta el navegador en la solicitud.
						+ gw.accepts.language: **Array** que contiene los idiomas que espera el navegador.
						+ gw.accepts.encodings: **Array** que contiene los encodigns que soporta el navegador.

			//- Property
			section.property
				h3#property-content: code
					small gangway
					| .content

				//- Property description
				section.description
					:markdown
						No se sabe 
						+ type:
						+ length: 
						+ boundary:
						+ params: 

			//- Property
			section.property
				h3#property-ranges: code
					small gangway
					| .ranges

				//- Property description
				section.description
					:markdown
						Alias de ranges de Node.
						+ check
						+ unit:
						+ start:
						+ end: 

			//- Property
			section.property
				h3#property-cookie: code
					small gangway
					| .cookie

				//- Property description
				section.description
					:markdown
						Alias de cookie de Node.

			//- Property
			section.property
				h3#property-auth: code
					small gangway
					| .auth

				//- Property description
				section.description
					:markdown
						Control de la autenticación HTTP del usuario.
						Devuelve false, en caso de no estar seteado y un objeto con `user` y `pass` en el caso de estarlo. 

					:highlight(lang='javascript')
						auth:{
							user: 'UserName',
							pass: 'PassUser'
						}

			//- Property
			section.property
				h3#property-ua: code
					small gangway
					| .ua

				//- Property description
				section.description
					:markdown
						User Agent. Contiene información relativa al cliente: 
						+ mobile: **Boolean**. Si es dispositivo móvil o no.
						+ os: **String** con el Sistema Operativo del cliente.
						+ engine: **String** . Motor de renderizado. Gecko, Webkit, Trident, Blink o Unknow.
						+ browser: **String** . Navegador del cliente. Firefox, Seamonkey, Chrome,, Chromium, Safari, Opera, MSIE o Unknow

					:highlight(lang='javascript')
						/*
						ua:{ 
							mobile: false,
							os: 'Windows NT 6.1; WOW64',
							engine: 'Blink',
							browser: 'Chrome'
						},*/

						gw.ua.mobile;
						gw.ua.os;
						gw.ua.engine;
						gw.ua.browser;

			//- Property
			section.property
				h3#property-origin: code
					small gangway
					| .origin

				//- Property description
				section.description
					:markdown
						Alias de origin de Node.

			//- Property
			section.property
				h3#property-ip: code
					small gangway
					| .ip

				//- Property description
				section.description
					:markdown
						Devuelve la dirección IP del cliente en un **String**.

					:highlight(lang='javascript')
							console.log(gw.ip);
							//>127.0.0.1

			//- Property
			section.property
				h3#property-httpVersion: code
					small gangway
					| .httpVersion

				//- Property description
				section.description
					:markdown
						Versión del protocolo HTTP.

			//- Property
			section.property
				h3#property-https: code
					small gangway
					| .https

				//- Property description
				section.description
					:markdown
						Lorem ipsum

			//- Property
			section.property
				h3#property-host: code
					small gangway
					| .host

				//- Property description
				section.description
					:markdown
						Host al que se realiza la petición.

					:highlight(lang='javascript')
							console.log(gw.host);
							//>localhost

			//- Property
			section.property
				h3#property-port: code
					small gangway
					| .port

				//- Property description
				section.description
					:markdown
						Puerto al que se realiza la petición.

					:highlight(lang='javascript')
							console.log(gw.port);
							//>3000

			//- Property
			section.property
				h3#property-method: code
					small gangway
					| .method

				//- Property description
				section.description
					:markdown
						Método utilizado para la petición. POST y/o GET.

					:highlight(lang='javascript')
							console.log(gw.method);
							//>GET

			//- Property
			section.property
				h3#property-path: code
					small gangway
					| .path

				//- Property description
				section.description
					:markdown
						Path completo al que se realiza la petición. 

					:highlight(lang='javascript')
						console.log(gw.path);
						//>/


			//- Property
			section.property
				h3#property-originalPath: code
					small gangway
					| .originalPath

				//- Property description
				section.description
					:markdown
						Path original desde el que se realiza la petición

					:highlight(lang='javascript')
							console.log(gw.originalPath);
							//>/


			//- Property
			section.property
				h3#property-query: code
					small gangway
					| .query

				//- Property description
				section.description
					:markdown
						GET + POST + ¿¿?

			//- Property
			section.property
				h3#property-referer: code
					small gangway
					| .referer

				//- Property description
				section.description
					:markdown
						lorem ipsum

			//- Property
			section.property
				h3#property-connection: code
					small gangway
					| .connection

				//- Property description
				section.description
					:markdown
						lorem ipsum

					:highlight(lang='javascript')
						console.log(gw.connection);
						//>keep-alive


			//- Property
			section.property
				h3#property-cache: code
					small gangway
					| .cache

				//- Property description
				section.description
					:markdown
						lorem ipsum
						+ control: 
						+ nonemath:
						+ modsince:

					:highlight(lang='javascript')
						console.log(gw.cache);
						//>{ control: 'max-age=0',
						//	 nonematch: false,
						//   modsince: 'Tue, 30 Dec 2014 18:47:00 GMT' },

			//- Property
			section.property
				h3#property-files: code
					small gangway
					| .files

				//- Property description
				section.description
					:markdown
						asd


			//- Property
			section.property
				h3#property-pathParams: code
					small gangway
					| .pathParams

				//- Property description
				section.description
					:markdown
						lorem

			//- Property
			section.property
				h3#property-params: code
					small gangway
					| .params

				//- Property description
				section.description
					:markdown
						Devuelve un objeto con el par parámetro-valor de la solicitud.

					:highlight(lang='javascript')
						route = new Route({path:'/:var'},function(gw){
							console.log(gw.params);
							gw.send("end");
						});
						//Consultando localhost:300/test/ imprime en consola:
						//>{var: 'test'}

					:markdown
						> Consulta cómo funcionan los path que admiten parámetros [aquí](#).


			//- Property
			section.property
				h3#property-queryHeap: code
					small gangway
					| .queryHeap

				//- Property description
				section.description
					:markdown
						lorem ipsum


			//- Property
			section.property
				h3#property-data: code
					small gangway
					| .data

				//- Property description
				section.description
					:markdown
						Propiedad creada para que sea el mejor lugar donde guardar datos temporales
					
					:highlight(lang='javascript')
						route = new Route(function(gw){
							gw.data.userNick = "lilxelo";
							gw.send("Hola: "+gw.data.miNick);
						});
						// Imprime: Hola: lilxelo

			
			//- Property
			section.property
				h3#property-encoding: code
					small gangway
					| .encoding

				//- Property description
				section.description
					:markdown
						Encoding que va a usar el servidor para la respuesta. Está basado en [gw.accepts.encodings](#accepts). 


			//- Property
			section.property
				h3#property-language: code
					small gangway
					| .language

				//- Property description
				section.description
					:markdown
						Idioma que va a usar el servidor para la respuesta.


			//- Property
			section.property
				h3#property-responseCookies: code
					small gangway
					| .responseCookies

				//- Property description
				section.description
					:markdown
						Paquete de cookies parseadas para enviar en la respuesta.


			//- Property
			section.property
				h3#property-cors: code
					small gangway
					| .cors

				//- Property description
				section.description
					:markdown
						Cabeceras CORS para la respuesta. 
						+ origin: 
						+ credentials:
						+ methods:
						+ headers: 



			//- Property
			section.property
				h3#property-size: code
					small gangway
					| .size

				//- Property description
				section.description
					:markdown
						Tamaño de la respuesta.


			//- Property
			section.property
				h3#property-lastmod: code
					small gangway
					| .lastmod

				//- Property description
				section.description
					:markdown
						lorem ipsum



			//- Property
			section.property
				h3#property-etag: code
					small gangway
					| .etag

				//- Property description
				section.description
					:markdown
						lorem ipsum


	

		//- Methods
		section.methods
			h2#methods Métodos

			//- Method
			section.method
				h3#method-setTimeout: code
					small gw
					| .setTimeout()

				//- Method description
				section.description
					:markdown
						Alias de [response.setTimeout(msecs, callback)](http://nodejs.org/api/all.html#all_response_settimeout_msecs_callback) de Node.

			//- Method
			section.method
				h3#method-writeContinue: code
					small gw
					| .writeContinue()

				//- Method description
				section.description
					:markdown
						Alias de [response.writeContinue(statusCode, [reasonPhrase], [headers])](http://nodejs.org/api/all.html#all_response_writecontinue) de Node.

				
			//- Method
			section.method
				h3#method-writeHead: code
					small gw
					| .writeHead()

				//- Method description
				section.description
					:markdown
						Alias de [response.writeHead(statusCode, [reasonPhrase], [headers])](http://nodejs.org/api/all.html#all_response_writehead_statuscode_reasonphrase_headers) de Node.

			
			//- Method
			section.method
				h3#method-setHeader: code
					small gw
					| .setHeader()

				//- Method description
				section.description
					:markdown
						Alias de [response.setHeader(name, value)](http://nodejs.org/api/all.html#all_response_setheader_name_value) de Node.

			//- Method
			section.method
				h3#method-getHeader: code
					small gw
					| .getHeader()

				//- Method description
				section.description
					:markdown
						Alias de [response.getHeader(name)](http://nodejs.org/api/all.html#all_response_getheader_name) de Node.


			//- Method
			section.method
				h3#method-removeHeader: code
					small gw
					| .removeHeader()

				//- Method description
				section.description
					:markdown
						Alias de [response.removeHeader(name)](http://nodejs.org/api/all.html#all_response_removeheader_name) de Node.


			//- Method
			section.method
				h3#method-addTrailers: code
					small gw
					| .addTrailers()

				//- Method description
				section.description
					:markdown
						Alias de [response.addTrailers(headers)](http://nodejs.org/api/all.html#all_response_addtrailers_headers) de Node.


			//- Method
			section.method
				h3#method-write: code
					small gw
					| .write()

				//- Method description
				section.description
					:markdown
						Alias de [response.write(chunk, [encoding])](http://nodejs.org/api/all.html#all_response_write_chunk_encoding) de Node.


			//- Method
			section.method
				h3#method-end: code
					small gw
					| .end()

				//- Method description
				section.description
					:markdown
						Alias de [response.end([data], [encoding])](http://nodejs.org/api/all.html#all_response_end_data_encoding) de Node.


			//- Method
			section.method
				h3#method-close: code
					small gw
					| .close()

				//- Method description
				section.description
					:markdown
						Cierra y finaliza el objeto gangway.
						En el [logger establece la información de qué se ha cerrado... ](https://github.com/bifuer/pillars/blob/master/lib/gangway.js#L202)

				section.syntax
					h4 Sintaxis
					codesyntax.
						.close();



			//- Method
			section.method
				h3#method-setCookie: code
					small gw
					| .setCookie()

				//- Method description
				section.description
					:markdown
						Guarda una nueva cookie para el envío en la respuesta.

				//- Method syntax
				section.syntax
					h4 Sintaxis
					codesyntax.
						.setCookie(name, value, config);
					:markdown
						+ name: **String** nombre de la cookie.
						+ value: 
						+ config: **objeto** que puede contener los siguientes parámetros;
							+ domain: 
							+ path: 
							+ expires: 
							+ maxAge: 
							+ secure: 
							+ httpOnly: 

					:highlight(lang='javascript')
						gw.setCookie(
							name: "userPreferences",
							value: ,
							config:{
								expires: 
							}

						);



			//- Method
			section.method
				h3#method-i18n: code
					small gw
					| .i18n()

				//- Method description
				section.description
					:markdown
						Devuelve el i18n alias con el idioma seteado en gw.language.

				//- Method syntax
				section.syntax
					h4 Sintaxis
					codesyntax.
						.i18n(text, params);
					:markdown
						+ text: 
						+ params: 

				section.example
					h4 Ejemplo
					:highlight(lang='javascript')
						gw.i18n();


			//- Method
			section.method
				h3#method-file: code
					small gw
					| .file()

				//- Method description
				section.description
					:markdown
						Envía al cliente un archivo.

				//- Method syntax
				section.syntax
					h4 Sintaxis
					codesyntax.
						.file(filename);

					:markdown
						+ filename: **String** que contiene el archivo a enviar al cliente.

						> Nota: Si el archivo es menor de 5MB el servidor lo comprimirá antes del envío y lo enviará comprimido. Si es mayor, lo enviará sin comprimir. Soporta el protocolo HTTP por partes, es decir, podemos pausar la descarga y reanudar la descarga desde el punto en el que se paró.


				section.example
					h4 Ejemplo
					:highlight(lang='javascript')
						gw.file("document.pdf");

			//- Method
			section.method
				h3#method-cacheck: code
					small gw
					| .cacheck()

				//- Method description
				section.description
					:markdown
						Lorem ipsum

				//- Method syntax
				section.syntax
					h4 Sintaxis
					codesyntax.
						.cacheck();

				section.example
					h4 Ejemplo
					:highlight(lang='javascript')
						gw.cacheck();

			//- Method
			section.method
				h3#method-authenticate: code
					small gw
					| .authenticate()

				//- Method description
				section.description
					:markdown
						Lorem ipsum

				//- Method syntax
				section.syntax
					h4 Sintaxis
					codesyntax.
						.authenticate();

				section.example
					h4 Ejemplo
					:highlight(lang='javascript')
						gw.authenticate();


			//- Method
			section.method
				h3#method-redirect: code
					small gw
					| .redirect()

				//- Method description
				section.description
					:markdown
						Redirección a la URL indicada.

				//- Method syntax
				section.syntax
					h4 Sintaxis
					codesyntax.
						.redirect(urlToRedirect);

					:markdown
						+ urlToRedirect: **String**. URL de la redirección.

				section.example
					h4 Ejemplo
					:highlight(lang='javascript')
						gw.redirect("www.pillarsjs.com");

			//- Method
			section.method
				h3#method-head: code
					small gw
					| .head()

				//- Method description
				section.description
					:markdown
						Lorem ipsum

				//- Method syntax
				section.syntax
					h4 Sintaxis
					:highlight(lang='javascript')
						gw.head();



			//- Method
			section.method
				h3#method-send: code
					small gw
					| .send()

				//- Method description
				section.description
					:markdown
						Envía en formato al cliente. Si es un objeto JSON.
						Cuando se realiza un `.send()` finaliza la ejecución del route en cuestión.

				//- Method syntax
				section.syntax
					h4 Sintaxis
					codesyntax.
						.send("message");

					:markdown
						+ message: **String**. URL de la redirección.

				section.example
					h4 Ejemplo
					:highlight(lang='javascript')
						gw.send();


			//- Method
			section.method
				h3#method-json: code
					small gw
					| .json()

				//- Method description
				section.description
					:markdown
						Lorem ipsum

				//- Method syntax
				section.syntax
					h4 Sintaxis
					:highlight(lang='javascript')
						
						gw.json();


			//- Method
			section.method
				h3#method-text: code
					small gw
					| .text()

				//- Method description
				section.description
					:markdown
						Lorem ipsum

				//- Method syntax
				section.syntax
					h4 Sintaxis
					:highlight(lang='javascript')
						
						gw.text();


			//- Method
			section.method
				h3#method-html: code
					small gw
					| .html()

				//- Method description
				section.description
					:markdown
						Lorem ipsum

				//- Method syntax
				section.syntax
					h4 Sintaxis
					:highlight(lang='javascript')
						
						gw.html();



			//- Method
			section.method
				h3#method-render: code
					small gw
					| .render()

				//- Method description
				section.description
					:markdown
						Lorem ipsum

				//- Method syntax
				section.syntax
					h4 Sintaxis
					:highlight(lang='javascript')
						
						gw.render();





			//- Method
			section.method
				h3#method-error: code
					small gw
					| .error()

				//- Method description
				section.description
					:markdown
						Lorem ipsum

				//- Method syntax
				section.syntax
					h4 Sintaxis
					:highlight(lang='javascript')
						
						gw.error();





		//- Eventos
		section.events
			h2#events Eventos

			section.event
				h3#event-closing: code
					| closing

				:markdown
					Dispara el evento `closing` cuando se comienza a cerrar el objeto gangway. 

				:highlight(lang='javascript')
					//Capturar el evento
					gw.on('closing');


			section.event
				h3#event-closed: code
					| closed

				:markdown
					Dispara el evento `closed` cuando se cierra y finaliza el objeto gangway. 

				:highlight(lang='javascript')
					//Capturar el evento
					gw.on('closed', function(){
						console.log("Evento capturado");
					});
