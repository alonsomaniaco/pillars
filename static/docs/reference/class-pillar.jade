include ../.layout.jade

doctype html
html(lang=gw.language)
	+reference-layout("Pillars.js Reference - Clase Pillar - 'make it easy!'")

		#title
			h1 Clase Pillar
				em  Pillars.js Reference
			a.source(href="https://github.com/bifuer/pillars/blob/master/lib/Pillar.js") Source

		//- Summary
		section.summary
			h2#summary Sumario
			:markdown
				La Clase Pillar permite ordenar los diferentes grupos de funcionalidades de nuestra aplicación, dando la opción de conectar o desconectar todo un grupo de funcionalidades con tan solo un `app.add(pillar)` o `app.remove(pillar)` respectivamente.

				Imagen.

				La Clase Pillar extiende de la [clase EventEmitter](http://nodejs.org/api/events.html).



		//- Syntax
		section.syntax
			h2#syntax Sintaxis
			code.codeblock.
				var myPillar = new Pillar();

			section.parameters
				h3 Parámetros
				:markdown
					Opcionalmente podemos instanciar la clase pasándo como parámetro un objeto con las siguientes propiedades:

				dl
					dt id
					dd
						:markdown
							**String** para especificar el identificador de la instancia del Pillar. **Por defecto**: se autogenera un id.

					dt path
					dd
						:markdown
							**String** para especificar a qué ruta responderá la instancia del Pillar. **Por defecto**: '/'

					dt priority
					dd
						:markdown
							**Integer** para especificar la prioridad de la instancia del Pillar. **Por defecto**: 1000.

					dt host
					dd
						:markdown
							**String** para especificar el nombre de host al que responderá el pillar. **Por defecto**: 1000.

		//- Description
		section.description
			h2#description Descripción
			:markdown
				La Clase Pillar es una parte del llamado **router en dos pasos**

		//- Properties --------------------------------------------------------
		section.properties
			h2#properties Propiedades


			//- Property
			section.property
				h3#property-beams: code 
					| App.prototype.beams

				//- Property description
				section.description
					h4 Descripción
					:markdown
						La propiedad `.beams` devuelve un Array con todas las instancias de la [Clase Beam]() que tiene añadida la instancia de la Pillar.

				//- Property syntax
				section.syntax
					h4 Sintaxis
					code.codeblock.
						pillar.beams;

					
			//- Property
			section.property
				h3#property-path: code 
					| App.prototype.path

				//- Property description
				section.description
					h4 Descripción
					:markdown
						La propiedad `.path` es una propiedad dinámica. Para setearla lo debemos hacer igualándola a un array con los idiomas de la aplicación.

					h4 Sintaxis
					code.codeblock.
						pillar.path

			
		//- Methods ---------------------------------------------------------------------
		section.methods
			h2#methods Métodos

			//- Method
			section.method
				h3#method-add: code
					| App.prototype.add()

				//- Method description
				section.description
					h4 Descripción
					:markdown
						El método `.add()` añade una instancia de la Clase Beam a la instancia de la Clase Pillar.

				//- Method syntax
				section.syntax
					h4 Sintaxis
					code.codeblock.
						app.add(beam);

					section.parameters
						h5 Parámetros
						dl
							dt beam
							dd
								:markdown
									Instancia de la Clase Beam. 

			//- Method
			section.method
				h3#method-get: code
					| App.prototype.get()

				//- Method description
				section.description
					h4 Descripción
					:markdown
						El método `.get()` devuelve la instancia de la Clase Beam pasada por párámetro. 

				//- Method syntax
				section.syntax
					h4 Sintaxis
					code.codeblock.
						app.get('idBeam');

					section.parameters
						h5 Parámetros
						dl
							dt idBeam
							dd
								:markdown
									Identificador con el que se instació un objeto concreto de la Clase Beam.  


			//- Method
			section.method
				h3#method-remove: code
					| App.prototype.remove()

				//- Method description
				section.description
					h4 Descripción
					:markdown
						El método `.remove()` desconecta la instancia de la Clase Beam pasada por parámetro.

				//- Method syntax
				section.syntax
					h4 Sintaxis
					code.codeblock.
						app.remove('idBeam');

					section.parameters
							h5 Parámetros
							dl
								dt idBeam
								dd
									:markdown
										Identificador con el que se creó el objeto concreto de la Clase Beam.   

		
		//- Events ---------------------------------------------------------------------
		section.events
			h2#events Eventos

			//- Method
			section.event
				h3#event-languages: code
					| languages

				//- Method description
				section.description
					h4 Descripción
					:markdown
						La clase App emite el evento 'languages' cuando se setea la propiedad languages.

				//- Method syntax
				section.syntax
					h4 Sintaxis
					code.codeblock.
						app.on('languages');

					




		//- Examples ------------------------------------------------------------------------------
		section.examples
			h2#examples Ejemplos

			//- Example
			section.example
				h3#example-1 Ejemplo 1
				:markdown
					Class `App` _Example 1_ lorem ipsum __synopsis__ hola [link to Google!](http://google.com)

				code.codeblock.
					var app = new App([{database:'',languages:['en'],port:3000,host:'*'}]);
				
				:markdown
					Class App Example 1 Review

