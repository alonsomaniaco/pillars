
mixin buttonlink(value,link)
	input(class='btn btn-default', type='button', value=value, onclick="window.location.href='"+link+"'")

mixin schema(schema)
	form(id="activeForm", ng-submit="sendForm()", name="$form")
		fieldset
			legend
				h3.text-primary=schema.title
					small=' '+schema.details

			div.unseters.ng-hide
				input(ng-repeat="(nstk,nst) in nstlist",ng-value="nst",name="unset[{{nstk}}]")

			div(class="form-horizontal")
				each field in schema.fields
					if field.template=='subset' || field.template=='list' 
						+#{field.template}(field)
					else
						+field(field)

mixin subset(subset)
	.form-group.form-list
		div(class="list-header", ng-class="{'has-error':validations['"+subset.NgExp.replace(/^data./,'')+"']}")
			label(class="control-label")=subset.label
			p(class="help-block")=subset.details
			button(class="btn btn-open btn-default", type='button')
				span(class="glyphicon glyphicon-eye-open")
				= " Show items"
			button(class="btn btn-open btn-default ng-hide", type='button')
				span(class="glyphicon glyphicon-eye-close")
				= " Close"
		div(class="list-items col-sm-12")
			each field in subset.fields
				+field(field)

mixin list(list)
	.form-group.form-list
		div(class="list-header", ng-class="{'has-error':validations['"+list.NgExp.replace(/^data./,'')+"']}")
			label(class="control-label")=list.label
			p(class="help-block")=list.details
			button(class="btn btn-open btn-default", type='button')
				span(class="glyphicon glyphicon-eye-open")
				= " Show {{"+list.NgScope+".length}} items"
			button(class="btn btn-open btn-default ng-hide", type='button')
				span(class="glyphicon glyphicon-eye-close")
				= " Close"
		div(class="list-items col-sm-12")
			- var lk = "$lk"+list.depth;
			- var lf = "$lf"+list.depth;
			//- var deleteName = list.NgName.replace('data[','delete[');
			fieldset(ng-repeat="("+lk+", "+lf+") in "+list.NgScope)
				//ol.breadcrumb
				//	li
				//		a(href="#") Home
				//	li
				//		a(href="#") Library
				//	li.active Data

				//legend
				//	#{'h'+(3+list.depth)}.text-primary
				//		= list.items.label + "{{"+lk+"}}"
				//		small=' '+list.items.details
				input(type='text',class="ng-hide",ng-value=list.NgScope+"["+lk+"]._id",name=list.NgName+"[{{"+lk+"}}][_id]")
				each field in list.fields
					+field(field)
				div(class="fieldset-controls")
					- var unsetid = "'"+list.NgScope.replace(/^data./,'')+".'+"+lf+"._id";
					button(ng-if="navsave", class="btn btn-remove btn-danger pull-right", type='button', ng-click="deleteListItem("+list.NgScope+","+lk+","+unsetid+")")
						span(class="glyphicon glyphicon-remove")
						|  Delete
					.input-group.list-sort-select
						span.input-group-addon
							span.glyphicon.glyphicon-sort
						select(class="form-control", ng-model=lf+"._order", ng-change="orderListItem("+list.NgScope+","+lk+")",ng-options="ork as ork*1+1 for (ork, ore) in "+list.NgScope+"")

		div(class="list-footer")
			input(class='btn btn-add btn-primary', type='button', value='Add',ng-click="addListItem("+list.parent.NgScope+",'"+list.id+"')")
		

mixin field(field)
	- var ngExp = field.NgExp;
	div(class="form-group", ng-class="{'has-error':(validations['"+ngExp.replace(/^data./,'')+"'] || $form['"+field.NgName+"'].$invalid)}")
		label(class="control-label col-sm-2",for=field.NgId)

			div(class="label-text")=field.label
				div(class="popover fade right in")
					.arrow
					.popover-title Field Object
					.popover-content
						pre="{{"+field.NgScope+"}}\n"+util.format(field)

			if field.i18n
				div(class="dropdown lang-selector")
					button(type="button", class="btn btn-default navbar-btn dropdown-toggle", data-toggle="dropdown") {{languages.active}} 
						span(class="caret")
						span(class="sr-only") Toggle Dropdown
					ul(class="dropdown-menu", role="menu")
						li(ng-repeat="lang in languages.list", ng-class="{active:languages.active==lang}")
							a(ng-click="languages.active=lang",href="") {{lang}}



		if field.i18n
			+field-i18n(field)
		else
			div(class="col-sm-10")
				+field-validation(field.NgExp)
				+#{field.template}({field:field,id:field.NgId,name:field.NgName,value:field.NgScope})
				p.help-block=field.details

mixin field-i18n(field)
	.pillar-langfields
		each lang in gw.textualization.langs
			- var classes = [];
			- classes.push('lang-'+lang);
			div(class="col-sm-10 ng-hide", ng-show="languages.active=='"+lang+"'")
				+field-validation(field.NgExp+"."+lang)
				+#{field.template}({field:field,id:field.NgId+"_"+lang,name:field.NgName+"["+lang+"]",value:field.NgScope+"."+lang,classes:classes})
				p.help-block=field.details

mixin field-validation(ngExp)
	div(class="alert alert-danger ng-hide",ng-show="validations['"+ngExp.replace(/^data./,'')+"']")
		ul(class="list-unstyled")
			li(ng-repeat="msg in validations['"+ngExp.replace(/^data./,'')+"']") {{msg}}

mixin text(config)
	input(type='text', class=config.classes, class=['form-control','field-text'], id=config.id, name=config.name, ng-model=config.value)

mixin file(config)
	input(type='file', class=config.classes, class=['form-control','field-file'], id=config.id, name=config.name)

mixin fileimg(config)
	imagepicker(class=config.classes, id=config.id, name=config.name, ng-model=config.value)

mixin textarea(config)
	textarea(class=config.classes, class=['form-control','field-textarea'], id=config.id, name=config.name, ng-model=config.value)

mixin editor(config)
	div(id=config.id+"_toolbar", style="display: none;")
		a(data-wysihtml5-command="bold") bold
		a(data-wysihtml5-command="italic") italic
		a(data-wysihtml5-command="foreColor", data-wysihtml5-command-value="red") red
		a(data-wysihtml5-command="foreColor", data-wysihtml5-command-value="green") green
		a(data-wysihtml5-command="foreColor", data-wysihtml5-command-value="blue") blue
		a(data-wysihtml5-command="createLink") insert link
		div(data-wysihtml5-dialog="createLink", style="display: none;")
			label Link:
				input(data-wysihtml5-dialog-field="href", value="http://", class="text")
			a(data-wysihtml5-dialog-action="save") OK
			a(data-wysihtml5-dialog-action="cancel") Cancel

	textarea(class=config.classes, class=['form-control','field-editor'], id=config.id, name=config.name, ng-model=config.value, html-editor="true")

mixin select(config)
	select(class=config.classes, class=['form-control','field-select'], id=config.id, name=config.name, ng-model=config.value)
		each option,i in config.field.values
			option(value=i)=option

mixin checkbox(config)
	.checkbox
		label
			input(type='checkbox', class=config.classes, class=['field-checkbox'], id=config.id, name=config.name, ng-model=config.value, ng-true-value='true', ng-false-value='false')

mixin checkboxes(config)
	each option,i in config.field.values
		.checkbox
			label
				input(type='checkbox', class=config.classes, class=['field-checkbox'], id=config.id, name=config.name+"["+i+"]", ng-model=config.value+"."+i, ng-true-value='true', ng-false-value='false')
				=option

mixin radios(config)
	each option,i in config.field.values
		.radio
			label
				input(type='radio', class=config.classes, class=['field-radio'], id=config.id, name=config.name, ng-model=config.value, value=i)
				=option

mixin time(config)
	datepicker(class=config.classes, id=config.id, ng-model=config.value, name=config.name)

mixin reference(config)
	reference(class=config.classes, id=config.id, ng-model=config.value, name=config.name)





