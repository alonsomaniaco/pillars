
mixin buttonlink(value,link)
	input(class='btn btn-default', type='button', value=value, onclick="window.location.href='"+link+"'")

mixin fieldset(fieldset)
	form(id="activeForm", ng-submit="sendForm()", name="$form")
		fieldset
			legend
				h3.text-primary=fieldset.title
					small=' '+fieldset.details

			div(class="form-horizontal")
				each field in fieldset.fields
					if field.template=='subset' || field.template=='list' 
						+#{field.template}(field)
					else
						+field(field)

mixin subset(subset)
	fieldset.pillar-subset
		legend
			#{'h'+(3+subset.depth)}.text-primary=subset.label
				small=' '+subset.details
		each field in subset.fields
			+field(field)

mixin list(list)
	.form-group
		label(class="control-label col-sm-2")=list.label
		div(class="list-container container col-sm-10")
			p(class="help-block")=list.details
			- var lk = "$lk"+list.depth;
			- var lf = "$lf"+list.depth;
			input(type='text', class="ng-hide",ng-repeat="("+lk+", "+lf+") in "+list.NgScope, ng-disabled=lf, id=list.NgId+"{{"+lk+"}}", name=list.NgName+"[{{"+lk+"}}]", value="unset")
			fieldset(ng-repeat="("+lk+", "+lf+") in "+list.NgScope, ng-disabled="!"+lf, ng-hide="!"+lf)
				legend
					#{'h'+(3+list.depth)}.text-primary
						= list.items.label + "{{"+lk+"}}"
						small=' '+list.items.details
				each field in list.fields
					+field(field)
				button(ng-if="navsave", class="btn btn-danger navbar-btn", type='button', ng-click="deleteListItem("+list.NgScope+","+lk+")")
					span(class="glyphicon glyphicon-remove")
					|  Delete
			
			input(class='btn btn-primary', type='button', value='Add',ng-click="addListItem("+list.parent.NgScope+",'"+list.id+"')")

mixin field(field)
	- var ngExp = field.NgExp;
	div(class="form-group", ng-class="{'has-error':(validations['"+ngExp+"'] || $form['"+field.NgName+"'].$invalid)}")
		label(class="control-label col-sm-2",for=field.NgId)=field.label
			div(class="popover fade right in")
				.arrow
				.popover-title Field Object
				.popover-content
					pre="{{"+field.NgScope+"}}\n"+util.format(field)

		if field.i18n
			+field-i18n(field)
		else
			div(class="col-sm-10")
				+field-validation(field.NgExp)
				+#{field.template}({field:field,id:field.NgId,name:field.NgName,value:field.NgScope})
				p.help-block=field.details

mixin field-i18n(field)
	.pillar-langfields
		each lang in gw.textualization.langs
			- var classes = [];
			- classes.push('lang-'+lang);
			div(class="col-sm-10 ng-hide", ng-show="languages.active=='"+lang+"'")
				+field-validation(field.NgExp+"."+lang)
				+#{field.template}({field:field,id:field.NgId+"_"+lang,name:field.NgName+"["+lang+"]",value:field.NgScope+"."+lang,classes:classes})
				p.help-block=field.details

mixin field-validation(ngExp)
	div(class="alert alert-danger ng-hide",ng-show="validations['"+ngExp+"']")
		ul(class="list-unstyled")
			li(ng-repeat="msg in validations['"+ngExp+"']") {{msg}}

mixin text(config)
	input(type='text', class=config.classes, class=['form-control','field-text'], id=config.id, name=config.name, ng-model=config.value)

mixin file_(config)
	input(type='file', class=config.classes, class=['form-control','field-file'], id=config.id, name=config.name)

mixin file(config)
	imagepicker(class=config.classes, id=config.id, name=config.name, ng-model=config.value)

mixin textarea(config)
	textarea(class=config.classes, class=['form-control','field-textarea'], id=config.id, name=config.name, ng-model=config.value)

mixin select(config)
	select(class=config.classes, class=['form-control','field-select'], id=config.id, name=config.name, ng-model=config.value)
		each option,i in config.field.values
			option(value=i)=option

mixin checkbox(config)
	.checkbox
		label
			input(type='checkbox', class=config.classes, class=['field-checkbox'], id=config.id, name=config.name, ng-model=config.value, ng-true-value='true', ng-false-value='false')

mixin checkboxes(config)
	each option,i in config.field.values
		.checkbox
			label
				input(type='checkbox', class=config.classes, class=['field-checkbox'], id=config.id, name=config.name+"["+i+"]", ng-model=config.value+"."+i, ng-true-value='true', ng-false-value='false')
				=option

mixin radios(config)
	each option,i in config.field.values
		.radio
			label
				input(type='radio', class=config.classes, class=['field-radio'], id=config.id, name=config.name, ng-model=config.value, value=i)
				=option

mixin time(config)
	datepicker(class=config.classes, id=config.id, ng-model=config.value, name=config.name)

mixin reference(config)
	reference(class=config.classes, id=config.id, ng-model=config.value, name=config.name)





